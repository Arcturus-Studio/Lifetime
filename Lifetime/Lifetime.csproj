<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageId>TwistedOak.Util.Lifetime</PackageId>
    <Version>1.0.3</Version>
    <Authors>Craig Gidney</Authors>
    <Company>Twisted Oak Studios</Company>
    <Product></Product>
    <Description>Lifetime (improved CancellationToken)

A small library that implements an improved version of System.Threading.CancellationToken with support for removable registrations, to allow for garbage collection in the presence of long-lived tokens, plus some related utilities.

Motivation: cancellation tokens can be the source of memory "leaks", because an unbounded number of completed operations may have registered now-pointless callbacks on a token that can't be released or cancelled. The callbacks may reference all kinds of data, preventing effective garbage collection. Using a Lifetime allows fixing these issues because callback registrations can be given lifetimes of their own.

Additional utilities: LifetimeSource, LifetimeExchanger, DisposableLifetime, Max, Min, CreateDependentSource.</Description>
    <Copyright>Twisted Oak Studios, 2012</Copyright>
    <PackageLicenseUrl>https://github.com/TwistedOakStudios/Lifetime/blob/master/License.txt</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/TwistedOakStudios/Lifetime</PackageProjectUrl>
    <PackageIconUrl>http://i.imgur.com/WP3EF.png</PackageIconUrl>
    <PackageTags>lifetime cancellation token</PackageTags>
    <PackageReleaseNotes>Using .Net Standard 2.0</PackageReleaseNotes>
    <RepositoryType></RepositoryType>
    <RepositoryUrl></RepositoryUrl>
    <NeutralLanguage></NeutralLanguage>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DocumentationFile>bin\Release\netstandard2.0\Lifetime.xml</DocumentationFile>
  </PropertyGroup>

</Project>
